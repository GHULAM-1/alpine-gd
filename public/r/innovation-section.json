{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "innovation-section",
  "type": "registry:block",
  "title": "Innovation Section",
  "description": "Innovation showcase section",
  "dependencies": [
    "react",
    "lucide-react",
    "framer-motion",
    "canvas-confetti"
  ],
  "devDependencies": [],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "components/sections/innovation-section.tsx",
      "content": "\"use client\";\r\n\r\nimport Image from \"next/image\";\r\n\r\nexport function InnovationSection() {\r\n  return (\r\n    <section className=\"py-12 sm:py-16 md:py-20 px-4 sm:px-6 md:px-8 bg-[#fafafa] dark:bg-[#2a2a2a] relative overflow-hidden\">\r\n      <div className=\"max-w-7xl mx-auto relative\">\r\n\r\n        {/* Main Content */}\r\n        <div className=\"text-center relative z-10 space-y-4 sm:space-y-6\">\r\n          <h2 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-[44px] font-bold text-[#252525] dark:text-[#fafafa] leading-tight max-w-5xl mx-auto flex flex-col sm:flex-row items-center justify-center gap-2 sm:gap-4\">\r\n            <span>Our latest innovation</span>\r\n              {/* First floating speaker */}\r\n              <span className=\"inline-block\">\r\n                <div className=\"flex items-center justify-center\">\r\n                  <Image\r\n                    src=\"/feat-2.webp\"\r\n                    alt=\"Speaker\"\r\n                    width={40}\r\n                    height={40}\r\n                    className=\"w-6 h-6 sm:w-8 sm:h-8 md:w-12 md:h-12 lg:w-20 lg:h-20 object-contain\"\r\n                  />\r\n                </div>\r\n              </span>\r\n            <span className=\"relative inline-block\">\r\n              in portable speakers\r\n            </span>\r\n          </h2>\r\n\r\n          <h3 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-[44px] font-bold text-[#252525] dark:text-[#fafafa] leading-tight max-w-5xl mx-auto flex flex-col sm:flex-row items-center justify-center gap-2 sm:gap-4\">\r\n            <span>combines superior sound quality</span>\r\n              {/* Second floating speaker */}\r\n                <div className=\"flex items-center justify-center\">\r\n                  <Image\r\n                    src=\"/feat-1.webp\"\r\n                    alt=\"Speaker\"\r\n                    width={40}\r\n                    height={40}\r\n                    className=\"w-6 h-6 sm:w-8 sm:h-8 md:w-12 md:h-12 lg:w-20 lg:h-20 object-contain\"\r\n                  />\r\n                </div>\r\n          </h3>\r\n\r\n          <h4 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-[44px] font-bold text-[#252525] dark:text-[#fafafa] leading-relaxed max-w-5xl mx-auto\">\r\n            with unmatched durability\r\n          </h4>\r\n        </div>\r\n\r\n       \r\n      </div>\r\n    </section>\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/sections/innovation-section.tsx"
    },
    {
      "path": "components/ui/animated-button.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\n/**\r\n * AnimatedButton Component\r\n * \r\n * A reusable button component with animated border effect\r\n * \r\n * @param {Object} props\r\n * @param {React.ReactNode} props.children - Button content\r\n * @param {string} props.className - Additional CSS classes for the button\r\n * @param {Function} props.onClick - Click handler\r\n * @param {boolean} props.disabled - Disabled state\r\n * @param {Object} props.style - Inline styles\r\n * @param {string} props.containerClassName - Additional CSS classes for the container\r\n */\r\nexport function AnimatedButton({ \r\n  children, \r\n  className = \"\", \r\n  onClick,\r\n  disabled = false,\r\n  style = {},\r\n  containerClassName = \"\",\r\n  ...props \r\n}: {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  style?: React.CSSProperties;\r\n  containerClassName?: string;\r\n  [key: string]: unknown;\r\n}) {\r\n  const [isHovered, setIsHovered] = useState(false)\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\r\n  const buttonRef = useRef<HTMLButtonElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (buttonRef.current) {\r\n      const { width, height } = buttonRef.current.getBoundingClientRect()\r\n      setDimensions({ width, height })\r\n    }\r\n  }, [children])\r\n\r\n  const createPath = () => {\r\n    const w = dimensions.width + 16\r\n    const h = dimensions.height + 16\r\n    const inset = 4\r\n    const radius = (h - (inset * 2)) / 2 + 4\r\n\r\n    return `\r\n      M ${inset + radius} ${inset}\r\n      L ${w - inset - radius} ${inset}\r\n      Q ${w - inset} ${inset} ${w - inset} ${inset + radius}\r\n      L ${w - inset} ${h - inset - radius}\r\n      Q ${w - inset} ${h - inset} ${w - inset - radius} ${h - inset}\r\n      L ${inset + radius} ${h - inset}\r\n      Q ${inset} ${h - inset} ${inset} ${h - inset - radius}\r\n      L ${inset} ${inset + radius}\r\n      Q ${inset} ${inset} ${inset + radius} ${inset}\r\n    `\r\n  }\r\n\r\n  return (\r\n    <div className={`relative inline-block p-2 ${containerClassName}`}>\r\n      <button\r\n        ref={buttonRef}\r\n        className={`relative z-10 ${className}`}\r\n        style={style}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        onMouseEnter={() => !disabled && setIsHovered(true)}\r\n        onMouseLeave={() => !disabled && setIsHovered(false)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n\r\n      {/* Animated SVG Border */}\r\n      {dimensions.width > 0 && !disabled && (\r\n        <svg\r\n          className=\"absolute pointer-events-none\"\r\n          style={{\r\n            top: '0px',\r\n            left: '0px',\r\n            width: dimensions.width + 16,\r\n            height: dimensions.height + 16\r\n          }}\r\n          viewBox={`0 0 ${dimensions.width + 16} ${dimensions.height + 16}`}\r\n          fill=\"none\"\r\n        >\r\n          <motion.path\r\n            d={createPath()}\r\n            stroke=\"#252525\"\r\n            className=\"dark:stroke-[#FAFAFA]\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n            initial={{ pathLength: 0 }}\r\n            animate={{ pathLength: isHovered ? 1 : 0 }}\r\n            transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n          />\r\n        </svg>\r\n      )}\r\n    </div>\r\n  )\r\n}",
      "type": "registry:component",
      "target": "components/ui/animated-button.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  },
  "meta": {
    "description": "Innovation showcase section",
    "source": "http://localhost:3000/r/innovation-section.json"
  }
}