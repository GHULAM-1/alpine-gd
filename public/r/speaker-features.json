{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "speaker-features",
  "type": "registry:block",
  "title": "Speaker Features",
  "description": "Speaker features section with specifications and highlights",
  "dependencies": [
    "react",
    "lucide-react",
    "canvas-confetti"
  ],
  "devDependencies": [],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "components/sections/speaker-features.tsx",
      "content": "\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { ChevronRight,AudioLines ,Smartphone   } from \"lucide-react\";\r\nimport { AnimatedButton } from \"../ui/animated-button\";\r\n\r\nexport function SpeakerFeatures() {\r\n  return (\r\n    <section className=\"py-12 sm:py-16 md:py-20 px-4 sm:px-6 md:px-8\">\r\n      <div className=\"max-w-7xl mx-auto space-y-24 sm:space-y-32 md:space-y-48\">\r\n\r\n        {/* First Feature Card */}\r\n        <div className=\"grid lg:grid-cols-2 gap-8 sm:gap-10 md:gap-14 items-center\">\r\n          {/* Left Content */}\r\n          <div className=\"space-y-6 sm:space-y-8\">\r\n            {/* Badge */}\r\n            <div className=\"flex items-center gap-3 text-[#252525] dark:text-[#fafafa] w-fit py-3\">\r\n              <span className=\"text-base sm:text-lg md:text-[20px] flex items-center gap-2 flex-wrap\">\r\n                <AudioLines className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n                <span>The Perfect Sound, Anywhere</span>\r\n              </span>\r\n            </div>\r\n\r\n            {/* Heading */}\r\n            <h2 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-[36px] font-medium text-[#252525] dark:text-[#fafafa] leading-tight\">\r\n              Experience crystal-clear audio with deep bass and immersive sound.\r\n            </h2>\r\n\r\n            {/* Description */}\r\n            <p className=\"ttext-[20px] text-[#252525] dark:text-[#fafafa] leading-relaxed\">\r\n              Our smart speaker is designed to fit your space with rich, high-fidelity soundâ€”whether you&apos;re at home or on the go.\r\n            </p>\r\n\r\n            {/* CTA Button */}\r\n            <AnimatedButton\r\n\r\n            className=\"bg-[#252525] text-sm sm:text-base dark:bg-[#fafafa] text-[#fafafa] dark:text-[#252525] px-4 sm:px-6 py-3 sm:py-4 rounded-full font-medium flex items-center gap-2 group w-fit\">\r\n              Buy now\r\n              <ChevronRight className=\"w-4 h-4 transition-transform duration-200 group-hover:translate-x-1\" />\r\n            </AnimatedButton>\r\n          </div>\r\n\r\n          {/* Right Image */}\r\n          <div className=\"relative order-first lg:order-last\">\r\n            <div className=\"overflow-hidden rounded-2xl\">\r\n              <Image\r\n                src=\"/feature-1.webp\"\r\n                alt=\"Crystal-clear audio speaker\"\r\n                width={500}\r\n                height={400}\r\n                className=\"w-full h-auto object-cover\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Second Feature Card */}\r\n        <div className=\"grid lg:grid-cols-2 gap-8 sm:gap-10 md:gap-14 items-center\">\r\n          {/* Left Image */}\r\n          <div className=\"relative lg:order-1\">\r\n            <div className=\"overflow-hidden rounded-2xl\">\r\n              <Image\r\n                src=\"/feature-2.webp\"\r\n                alt=\"Smart speaker with modern design\"\r\n                width={500}\r\n                height={400}\r\n                className=\"w-full h-auto object-cover\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Content */}\r\n          <div className=\"space-y-6 sm:space-y-8 lg:order-2\">\r\n            {/* Badge */}\r\n            <div className=\"flex items-center gap-3 text-[#252525] dark:text-[#fafafa] w-fit py-3\">\r\n              <span className=\"text-base sm:text-lg md:text-[20px] flex items-center gap-2 flex-wrap\">\r\n                <Smartphone className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n                <span>Smart, Sleek, Powerful</span>\r\n              </span>\r\n            </div>\r\n\r\n            {/* Heading */}\r\n            <h2 className=\"text-2xl sm:text-3xl md:text-4xl lg:text-[36px] font-medium text-[#252525] dark:text-white leading-tight\">\r\n              Seamless connectivity, voice control, and a sleek, modern design make this speaker the perfect addition to any room.\r\n            </h2>\r\n\r\n            {/* Description */}\r\n            <p className=\"text-[20px] text-[#252525] dark:text-[#fafafa] leading-relaxed\">\r\n              Designed for modern living life-upward stands premium sound with intuitive controls.\r\n            </p>\r\n\r\n            {/* CTA Button */}\r\n            <AnimatedButton\r\n\r\n            className=\"bg-[#252525] text-sm sm:text-base dark:bg-[#fafafa] text-[#fafafa] dark:text-[#252525] px-4 sm:px-6 py-3 sm:py-4 rounded-full font-medium flex items-center gap-2 group w-fit\">\r\n              Buy now\r\n              <ChevronRight className=\"w-4 h-4 transition-transform duration-200 group-hover:translate-x-1\" />\r\n            </AnimatedButton>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  );\r\n}",
      "type": "registry:component",
      "target": "components/sections/speaker-features.tsx"
    },
    {
      "path": "components/ui/animated-button.tsx",
      "content": "\"use client\"\r\n\r\nimport { useState, useRef, useEffect } from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\n/**\r\n * AnimatedButton Component\r\n * \r\n * A reusable button component with animated border effect\r\n * \r\n * @param {Object} props\r\n * @param {React.ReactNode} props.children - Button content\r\n * @param {string} props.className - Additional CSS classes for the button\r\n * @param {Function} props.onClick - Click handler\r\n * @param {boolean} props.disabled - Disabled state\r\n * @param {Object} props.style - Inline styles\r\n * @param {string} props.containerClassName - Additional CSS classes for the container\r\n */\r\nexport function AnimatedButton({ \r\n  children, \r\n  className = \"\", \r\n  onClick,\r\n  disabled = false,\r\n  style = {},\r\n  containerClassName = \"\",\r\n  ...props \r\n}: {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  disabled?: boolean;\r\n  style?: React.CSSProperties;\r\n  containerClassName?: string;\r\n  [key: string]: unknown;\r\n}) {\r\n  const [isHovered, setIsHovered] = useState(false)\r\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\r\n  const buttonRef = useRef<HTMLButtonElement>(null)\r\n\r\n  useEffect(() => {\r\n    if (buttonRef.current) {\r\n      const { width, height } = buttonRef.current.getBoundingClientRect()\r\n      setDimensions({ width, height })\r\n    }\r\n  }, [children])\r\n\r\n  const createPath = () => {\r\n    const w = dimensions.width + 16\r\n    const h = dimensions.height + 16\r\n    const inset = 4\r\n    const radius = (h - (inset * 2)) / 2 + 4\r\n\r\n    return `\r\n      M ${inset + radius} ${inset}\r\n      L ${w - inset - radius} ${inset}\r\n      Q ${w - inset} ${inset} ${w - inset} ${inset + radius}\r\n      L ${w - inset} ${h - inset - radius}\r\n      Q ${w - inset} ${h - inset} ${w - inset - radius} ${h - inset}\r\n      L ${inset + radius} ${h - inset}\r\n      Q ${inset} ${h - inset} ${inset} ${h - inset - radius}\r\n      L ${inset} ${inset + radius}\r\n      Q ${inset} ${inset} ${inset + radius} ${inset}\r\n    `\r\n  }\r\n\r\n  return (\r\n    <div className={`relative inline-block p-2 ${containerClassName}`}>\r\n      <button\r\n        ref={buttonRef}\r\n        className={`relative z-10 ${className}`}\r\n        style={style}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n        onMouseEnter={() => !disabled && setIsHovered(true)}\r\n        onMouseLeave={() => !disabled && setIsHovered(false)}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </button>\r\n\r\n      {/* Animated SVG Border */}\r\n      {dimensions.width > 0 && !disabled && (\r\n        <svg\r\n          className=\"absolute pointer-events-none\"\r\n          style={{\r\n            top: '0px',\r\n            left: '0px',\r\n            width: dimensions.width + 16,\r\n            height: dimensions.height + 16\r\n          }}\r\n          viewBox={`0 0 ${dimensions.width + 16} ${dimensions.height + 16}`}\r\n          fill=\"none\"\r\n        >\r\n          <motion.path\r\n            d={createPath()}\r\n            stroke=\"#252525\"\r\n            className=\"dark:stroke-[#FAFAFA]\"\r\n            strokeWidth=\"2\"\r\n            fill=\"none\"\r\n            initial={{ pathLength: 0 }}\r\n            animate={{ pathLength: isHovered ? 1 : 0 }}\r\n            transition={{ duration: 0.5, ease: \"easeInOut\" }}\r\n          />\r\n        </svg>\r\n      )}\r\n    </div>\r\n  )\r\n}",
      "type": "registry:component",
      "target": "components/ui/animated-button.tsx"
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {}
      }
    }
  },
  "meta": {
    "description": "Speaker features section with specifications and highlights",
    "source": "http://localhost:3000/r/speaker-features.json"
  }
}